{"version":3,"sources":["components/RecordingComponent.js"],"names":["window","MR","undefined","constraints","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaSource","MediaSource","createSrc","URL","createObjectURL","stream","RecordingComponent","console","log","getit","mediaRecorder","MediaRecorder","state","start","ondataavailable","handleDataAvailable","recordedBlobs","data","size","push","alert","videoStream","video","src","play","theRecording","error","pause","superBlob","stop","Blob","type","clickSupport","clickRec","clickPause","clickResume","clickStop","clickPlay","React","Component"],"mappings":"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","file":"RecordingComponent.js","sourcesContent":["if (window.MR === undefined) {window.MR = {};}\n\n\n(function() {\n  'use strict';\n\n  var constraints = {\n    \"video\": true,\n    \"audio\": false\n  };\n\n\n  navigator.getUserMedia =\n  navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia ||\n  null;\n\n\n  var mediaSource = new MediaSource();\n  var createSrc = window.URL ? window.URL.createObjectURL : function(stream) {return stream;};\n\n  class RecordingComponent extends React.Component {\n\n\n    theRecording(stream){\n    //turn this into an if else statement with text content and toggle?\n      console.log('startRecording function');\n      this.getit(stream);\n      var mediaRecorder = new MediaRecorder(stream);\n      this.mediaRecorder = mediaRecorder;\n\n      if (this.mediaRecorder.state !== 'recording'){\n        console.log('Created MediaRecorder', mediaRecorder);\n        this.mediaRecorder.start();\n        console.log('MediaRecorder state:', this.mediaRecorder.state);\n        this.mediaRecorder.ondataavailable = this.handleDataAvailable;\n      }\n    };\n\n    handleDataAvailable(stream) {\n\n      if(this.recordedBlobs === undefined){\n        this.recordedBlobs = [];\n      };\n      if (stream.data && stream.data.size > 0) {\n        this.recordedBlobs.push(stream.data);\n      }\n    };\n\n\n\n    error(){\n      console.log('error');\n    };\n\n    clickSupport(){\n      console.log('clicked support');\n      if(navigator.getUserMedia === null){\n        alert('Sorry! This will not work on your browser.');\n        console.log('no support');\n      }\n      else{\n        console.log('has support');\n      }\n    };\n\n   getit(stream){\n     var videoStream = stream;\n     video.src = createSrc(stream);\n     video.play();\n    }\n\n    clickRec(){\n      navigator.getUserMedia(constraints, (stream)=>{this.theRecording(stream)}, this.error);\n      console.log ('clicked record');\n    };\n\n    clickPause(){\n      console.log ('clicked Pause');\n      video.pause();\n    };\n\n    clickResume(){\n      console.log ('clicked resume');\n    };\n\n    clickPlay(){\n      console.log('clicked play');\n      video.src = window.URL.createObjectURL(this.superBlob);\n    };\n\n    clickStop(){\n      console.log ('clicked stop');\n      this.mediaRecorder.stop();\n      console.log(\"recorder stopped\");\n      console.log('mediaRecorder state:', this.mediaRecorder.state);\n      console.log(\"the blobs\", this.mediaRecorder.recordedBlobs)\n      var superBlob = new Blob(this.mediaRecorder.recordedBlobs, {type: 'video/webm'});\n      this.superBlob = superBlob;\n      console.log('superBlob:', this.superBlob)\n    };\n\n\n\n\n    render(){\n      var videoStream = null;\n      return (\n        <div className=\"recorder-container\">\n          <h1>Recorder</h1>\n\n          <video id=\"video\" controls autoPlay></video>\n\n          <button id=\"supported\" onClick={() => {this.clickSupport();}}>Support</button>\n\n          <button id=\"record\" onClick={() => {this.clickRec();}}>Record</button>\n\n          <button id=\"pause\" onClick={() => {this.clickPause();}}>Pause</button>\n\n          <button id=\"resume\" onClick={() => {this.clickResume();}}>Resume</button>\n\n          <button id=\"stop\" onClick={() => {this.clickStop();}}>Stop</button>\n\n          <button id=\"play\" onClick={() => {this.clickPlay();}}>Play</button>\n\n\n        </div>\n      )\n\n    };\n  }\n  MR.RecordingComponent = RecordingComponent;\n}());\n"]}